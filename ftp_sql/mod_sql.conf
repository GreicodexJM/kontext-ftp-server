  <IfModule mod_sql.c>
    AuthOrder mod_sql.c

    SQLBackend mysql 
    SQLBackend        mysql
    
    #Passwords in MySQL are encrypted using CRYPT
    SQLAuthTypes            OpenSSL Crypt
    SQLAuthenticate         users groups

    # We need our "default" connection to the userdb database
    # used to connect to the database
    # databasename@host database_user user_password
    SQLConnectInfo  {{database}}@{{dbhost}}:{{3306}} {{mysql_user}} {{mysql_password}}

    # Here we tell ProFTPd the names of the database columns in the "usertable"
    # we want it to interact with. Match the names with those in the db
    SQLUserInfo     ftpuser userid passwd uid gid homedir shell
    
    # Here we tell ProFTPd the names of the database columns in the "grouptable"
    # we want it to interact with. Again the names match with those in the db
    SQLGroupInfo    ftpgroup groupname gid members

    # set min UID and GID - otherwise these are 999 each
    SQLMinID        500

    # Now that we have a default connection, we can create another connection, named "logdb" and using the "mysql" backend, to the logdb database
    SQLNamedConnectInfo logdb mysql {{database}}@{{dbhost}}:{{3306}} {{mysql_user}} {{mysql_password}}

    # Add a row to the login_history table on successful login in the logdb
    SQLNamedQuery log_sess FREEFORM "INSERT INTO login_history (user, client_ip, server_ip, protocol, when) VALUES ('%u', '%a', '%V', '%{protocol}', NOW())" logdb


    # Update count every time user logs in
    SQLLog PASS updatecount
    SQLNamedQuery updatecount UPDATE "count=count+1, accessed=now() WHERE userid='%u'" ftpuser

    # Update modified everytime user uploads or deletes a file
    SQLLog  STOR,DELE modified
    SQLNamedQuery modified UPDATE "modified=now() WHERE userid='%u'" ftpuser
    SqlLogFile /var/log/proftpd/sql.log

    # Update the users.last_accessed column on successful login in the userdb
    SQLNamedQuery last_accessed UPDATE "last_accessed = NOW() WHERE userid='%u'" users

    SQLLog PASS last_accessed

    SQLLog PASS log_sess IGNORE_ERRORS
    
  </IfModule>

 





